import telebot # импортируем стандартную библиотеку telebot
import random # тмпортируем стандартную библиотеку random

token = "5494317597:AAG7ZgY_zQ-qR7ZDGpnK_vqsKXPG4GXiLeA" # создаём переменную, в которую вкладываем токен из Telegram
bot = telebot.TeleBot(token) # вызываем в переменную bot готовые функции из библиотеки telebot
HELP = """
/help - вывести список доступных команд
/add - добавить задачу в список задач (запрашиваеться у пользователя)
/show - напечатать все заданные задачи в планировщике
/exit - выход из планировщика
/random -  добавляет случайную задачу на дату Сегодня"""

RANDOM_TASKS = ["Прочитать книгу 'Укус Питона'", "Свериться с Roadmap изучения", "Посмотреть Youtube", "Изучить группы Telegramm", "Изучать Python"] # создаём список со случайными задачами

tasks ={} # создаём пустой словарь

def add_todo(date, task): # функция проверяющая наличие даты в словаре
  if date in tasks: # если дата есть в списке tasks
     tasks[date].append(task) # добавляем в словарь задачу
  else: # иначе записи в словаре нет
     tasks[date] = []
     tasks[date].append(task) # добавляем в словарь новый список с датой

@bot.message_handler(commands=["add"]) # позволяет зарегистрировать функцию def в качестве обработчика сообщений типа "/add"
def add(message): # функция принимает сообщение, которое нам написал пользователь
    command = message.text.split(maxsplit=2) # помещаем в переменную разделённую строку, по умолчанию функция split разделяет сроку по пробелам.
    # параметр в скобках указывает, что максимум на 2 пробела можно разделить
    date = command[1].lower() # используем функцию lower для того,что бы текст с верхним регистром ("Сегодня")
    task = command[2]
    if len(task)>3: # если длина задачи больше 3 символов, то задача и дата добавляются в список
        add_todo(date, task)
        text = "Задача " + task + " добавлена в список дел на дату " + date  # вывод сообщения для пользователя
    else: # иначе ошибка
        text = "Такая задача не допустима!"
    bot.send_message(message.chat.id, text) # ответ отправляем пользователю в Telegram

@bot.message_handler(commands=["random"])
def random_add(message): # позволяет зарегистрировать функцию def random в качестве обработчика сообщений типа "/random"
    date = "Сегодня"
    task = random.choice(RANDOM_TASKS) # используем функцию choice из импортированной библиотеке random
    # тоесть задача (tasк) случайно выбираеться из списка
    add_todo(date, task)
    text = "Задача " + task + " добавлена в список дел на дату " + date  # вывод сообщения для пользователя
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=["show", "print"])
def show(message):
    command = message.text.split(maxsplit=1) # нам дата нужня вся, поэтому отделяем только 1 пробел
    date = command[1].lower() # мы сохраняли даты в нижнем регистре, поэтому нужно их получать из словаря тоже в нижнем регистре
    text = ""
    if date in tasks: # проверяем есть ли дата в словаре
        text = date.upper() + "\n"  # приводим дату к верхнему регистру и переводим на новую строку
        for task in tasks[date]: # для каждой задачи в списке Дата
            text = text + "[] " + task + "\n" # инструкция \n осуществляет перевод строки.Каждая задача будет выходить с новой строки
    else:
        text = "Задач на эту дату нет" # иначе даты нет в словаре
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=["help"]) # позволяет зарегистрировать функцию def help в качестве обработчика сообщений типа "/help"
def help(message): # функция принимает сообщение, которое нам написал пользователь
    bot.send_message(message.chat.id, HELP)

bot.polling(none_stop=True) # вызванная функция polling из библиотеки telebot начинает отправку запросов к серверам Telegram используя наш код-токен и
                            # спрашивает есть для нас сообщения,если сообщения есть, тозапускает обработку